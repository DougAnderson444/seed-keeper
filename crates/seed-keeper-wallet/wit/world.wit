package seed-keeper:wallet@0.1.0;

interface types {
    /// The confuration of the seed keeper
    record credentials {
        /// The username to use for the seed keeper
        username: list<u8>,

        /// The password to use for the seed keeper
        password: list<u8>,

        /// Optional prevously generated encrypted seed to use for the seed keeper
        encrypted: option<list<u8>>
    }
}

interface config {
    /// Import the types interface
    use types.{credentials};

    /// Load into the component from an encrypted seed, password, and salt (username)
    /// Returns the encrypted seed or an error
    set-config: func(config: credentials) -> result<_, string>; 
    /// Returns the encrypted seed or None if it doesn't exist
    get-encrypted: func() -> result<list<u8>, string>; 
    /// Get the plaintext seed
    get-seed: func() -> result<list<u8>, string>;
}

world keeper {
    /// Export the ability for users to set the config of the seed keeper
    export config;
}
